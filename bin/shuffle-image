#!/usr/bin/env python
from random import shuffle, seed
from itertools import product
from math import sqrt

import click as click
import jigsaw as jgs


@click.command()
@click.argument('input', type=click.Path(exists=True))
@click.argument('output', type=click.Path())
@click.option('-n', '--num-pieces', type=int, default=16)
@click.option('-r', '--random-seed', type=int, default=None)
def shuffle_image(input, output, num_pieces, random_seed):
    image = jgs.load_image(input)
    height, width, _ = image.shape
    if height != width:
        raise ValueError('input image must be square')

    images = jgs.subdivide_image(image, num_pieces)
    dimension = int(sqrt(num_pieces))
    coordinates = list(product(range(dimension), range(dimension)))

    if random_seed:
        seed(random_seed)

    shuffle(coordinates)
    x = [x for (x, _) in coordinates]
    y = [y for (_, y) in coordinates]

    jgs.save_image(output, jgs.reconstruct(images, x, y))


if __name__ == '__main__':
    shuffle_image()
